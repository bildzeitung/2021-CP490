openapi: 3.0.3
info:
    version: 1.0.0
    title: Concurrent Online Adventure Land, or MUD
    description: An API for playing multi-user text adventures
servers:
- url: /v1
paths:
  /turn/{game}/{player}:
    post:
      summary: Submit player turn
      parameters:
        - name: game
          in: path
          required: true
          description: The id of the game
          schema:
            type: string
        - name: player
          in: path
          required: true
          description: The id of the player
          schema:
            type: string
      requestBody:
        description: Command text for server to process
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameTurnSubmission'
      responses:
        '200':
          description: Turn submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameTurnResponse'
        '404':
          description: Cannot find game or player in game
        '400':
          description: Badly-formed request
        '500':
          description: Server error
  /game:
    get:
      summary: Retrieve a list of games
      responses:
        '200':
          description: List of games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfGames'
    post:
      summary: Create a new game
      requestBody:
          $ref: '#/components/requestBodies/GameBody'
      responses:
        '201':
          $ref: '#/components/responses/GameDetailResponse'
  /game/{game_id}:
    get:
      summary: Retrieve game details
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '200':
          $ref: '#/components/responses/GameDetailResponse'
    put:
      summary: Update game parameters
      parameters:
        - $ref: '#/components/parameters/gameId'
      requestBody:
        $ref: '#/components/requestBodies/GameBody'
      responses:
        '200':
          $ref: '#/components/responses/GameDetailResponse'
    delete:
      summary: Remove game
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '204':
          description: Game deleted
  /game/{game_id}/room:
    get:
      summary: Retrieve all rooms
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '200':
          description: List of rooms
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRooms'
    post:
      summary: Add a new room to a game
      parameters:
        - $ref: '#/components/parameters/gameId'
      requestBody:
        $ref: '#/components/requestBodies/RoomBody'
      responses:
        '201':
          $ref: '#/components/responses/RoomDetailResponse'
  /game/{game_id}/room/{room_id}:
    get:
      summary: Retrieve room details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      responses:
        '200':
          $ref: '#/components/responses/RoomDetailResponse'
    put:
      summary: Update room details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      requestBody:
        $ref: '#/components/requestBodies/RoomBody'
      responses:
        '200':
          $ref: '#/components/responses/RoomDetailResponse'
    delete:
      summary: Remove room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      responses:
        '204':
          description: Room deleted
  /game/{game_id}/room/{room_id}/exit:
    get:
      summary: Retrieve exits for a given room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      responses:
        '200':
          description: List of exits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfExits'
    post:
      summary: Add a new exit to a room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      requestBody:
        $ref: '#/components/requestBodies/ExitBody'
      responses:
        '201':
          $ref: '#/components/responses/RoomExitDetailResponse'
  /game/{game_id}/room/{room_id}/exit/{exit_id}:
    get:
      summary: Retrieve details for a specific exit
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
        - $ref: '#/components/parameters/exitId'
      responses:
        '200':
          $ref: '#/components/responses/RoomExitDetailResponse'
    delete:
      summary: Remove exit from room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
        - $ref: '#/components/parameters/exitId'
      responses:
        '204':
          description: Exit deleted
components:
  schemas:
    TurnResponseStatus:
      type: string
      enum:
        - OK
        - ERROR
    GameTurnResponse:
      type: object
      properties:
        status: 
          $ref: '#/components/schemas/TurnResponseStatus'
        text:
          type: string
    GameTurnSubmission:
      type: object
      properties:
        command:
          type: string
    Game:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    GameDetail:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
    GameSubmit:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    ArrayOfGames:
      type: array
      items:
        $ref: '#/components/schemas/Game'
    Room:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    RoomDetail:
      type: object
      properties:
        id:
          type: string
        game_id:
          type: string
        title:
          type: string
        description:
          type: string
        exits:
          $ref: '#/components/schemas/ArrayOfExits'
    Exit:
      type: object
      properties:
        id:
          type: string
        to_room_id:
          type: string
        direction:
          type: string
    ExitSubmit:
      type: object
      properties:
        to_room_id:
          type: string
        direction:
          type: string
    RoomSubmit:
      type: object
      properties:
        game_id:
          type: string
        title:
          type: string
        description:
          type: string
        exits:
          type: array
          items:
            $ref: '#/components/schemas/ExitSubmit'
    ArrayOfRooms:
      type: array
      items:
        $ref: '#/components/schemas/Room'
    ArrayOfExits:
      type: array
      items:
        $ref: '#/components/schemas/Exit'
  parameters:
    gameId:
      name: game_id
      in: path
      required: true
      description: The id of the game to edit
      schema:
        type: string
    roomId:
      name: room_id
      in: path
      required: true
      description: UUID of a room
      schema:
        type: string
    exitId:
      name: exit_id
      in: path
      required: true
      description: UUID of an exit
      schema:
        type: string
  requestBodies:
    GameBody:
      description: Settable Game properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameSubmit'
    RoomBody:
      description: Settable Room properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomSubmit'
    ExitBody:
      description: Settable Exit properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExitSubmit'
  responses:
    GameDetailResponse:
      description: Game detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameDetail'
    RoomDetailResponse:
      description: Room detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomDetail'
    RoomExitDetailResponse:
      description: Exit detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exit'
