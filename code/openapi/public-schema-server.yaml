openapi: 3.0.3
info:
    version: 1.0.0
    title: Concurrent Online Adventure Land, or MUD
    description: An API for playing multi-user text adventures
servers:
- url: /v1
paths:
  /game/{game_id}/character/{character_id}/turn:
    post:
      summary: Submit player turn
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/characterId'
      requestBody:
        $ref: '#/components/requestBodies/TurnBody'
      responses:
        '201':
          $ref: '#/components/responses/TurnDetailResponse'
  /game:
    get:
      summary: Retrieve a list of games
      responses:
        '200':
          $ref: '#/components/responses/GameListResponse'
    post:
      summary: Create a new game
      requestBody:
          $ref: '#/components/requestBodies/GameBody'
      responses:
        '201':
          $ref: '#/components/responses/GameDetailResponse'
  /game/{game_id}:
    get:
      summary: Retrieve game details
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '200':
          $ref: '#/components/responses/GameDetailResponse'
    put:
      summary: Update game parameters
      parameters:
        - $ref: '#/components/parameters/gameId'
      requestBody:
        $ref: '#/components/requestBodies/GameBody'
      responses:
        '200':
          $ref: '#/components/responses/GameDetailResponse'
    delete:
      summary: Remove game
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '204':
          description: Game deleted
  /game/{game_id}/room:
    get:
      summary: Retrieve all rooms
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '200':
          $ref: '#/components/responses/RoomListResponse'
    post:
      summary: Add a new room to a game
      parameters:
        - $ref: '#/components/parameters/gameId'
      requestBody:
        $ref: '#/components/requestBodies/RoomBody'
      responses:
        '201':
          $ref: '#/components/responses/RoomDetailResponse'
  /game/{game_id}/room/{room_id}:
    get:
      summary: Retrieve room details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      responses:
        '200':
          $ref: '#/components/responses/RoomDetailResponse'
    put:
      summary: Update room details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      requestBody:
        $ref: '#/components/requestBodies/RoomBody'
      responses:
        '200':
          $ref: '#/components/responses/RoomDetailResponse'
    delete:
      summary: Remove room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      responses:
        '204':
          description: Room deleted
  /game/{game_id}/room/{room_id}/exit:
    get:
      summary: Retrieve exits for a given room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      responses:
        '200':
          $ref: '#/components/responses/RoomExitListResponse'
    post:
      summary: Add a new exit to a room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
      requestBody:
        $ref: '#/components/requestBodies/ExitBody'
      responses:
        '201':
          $ref: '#/components/responses/RoomExitDetailResponse'
  /game/{game_id}/room/{room_id}/exit/{exit_id}:
    get:
      summary: Retrieve details for a specific exit
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
        - $ref: '#/components/parameters/exitId'
      responses:
        '200':
          $ref: '#/components/responses/RoomExitDetailResponse'
    delete:
      summary: Remove exit from room
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/roomId'
        - $ref: '#/components/parameters/exitId'
      responses:
        '204':
          description: Exit deleted
  /game/{game_id}/item:
    get:
      summary: Retrieve all items
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '200':
          $ref: '#/components/responses/ItemListResponse'
    post:
      summary: Add a new item to a game
      parameters:
        - $ref: '#/components/parameters/gameId'
      requestBody:
        $ref: '#/components/requestBodies/ItemBody'
      responses:
        '201':
          $ref: '#/components/responses/ItemDetailResponse'
  /game/{game_id}/item/{item_id}:
    get:
      summary: Retrieve item details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/itemId'
      responses:
        '200':
          $ref: '#/components/responses/ItemDetailResponse'
    put:
      summary: Update item details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/itemId'
      requestBody:
        $ref: '#/components/requestBodies/ItemBody'
      responses:
        '200':
          $ref: '#/components/responses/ItemDetailResponse'
    delete:
      summary: Remove item
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/itemId'
      responses:
        '204':
          description: Item deleted          
  /game/{game_id}/event:
    get:
      summary: Retrieve a list of events
      parameters:
        - $ref: '#/components/parameters/gameId'
      responses:
        '200':
          $ref: '#/components/responses/EventListResponse'
    post:
      summary: Create a new event
      parameters:
        - $ref: '#/components/parameters/gameId'
      requestBody:
        $ref: '#/components/requestBodies/EventBody'
      responses:
        '201':
          $ref: '#/components/responses/EventDetailResponse'
  /game/{game_id}/event/{event_id}:
    get:
      summary: Retrieve event details
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/eventId'
      responses:
        '200':
          $ref: '#/components/responses/EventDetailResponse'
    put:
      summary: Update event parameters
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/eventId'
      requestBody:
        $ref: '#/components/requestBodies/EventBody'
      responses:
        '200':
          $ref: '#/components/responses/EventDetailResponse'
    delete:
      summary: Remove event
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/eventId'
      responses:
        '204':
          description: Event deleted
  /game/{game_id}/player/{player_id}/character:
    post:
      summary: Retrieve player characters
      parameters:
        - $ref: '#/components/parameters/gameId'
        - $ref: '#/components/parameters/playerId'
      requestBody:
        $ref: '#/components/requestBodies/CharacterBody'
      responses:
        '201':
          $ref: '#/components/responses/CharacterDetailResponse'
  /player:
    get:
      summary: Retrieve a list of players
      responses:
        '200':
          $ref: '#/components/responses/PlayerListResponse'
    post:
      summary: Create a new player
      requestBody:
          $ref: '#/components/requestBodies/PlayerBody'
      responses:
        '201':
          $ref: '#/components/responses/PlayerDetailResponse'
  /player/{player_id}:
    get:
      summary: Retrieve player details
      parameters:
        - $ref: '#/components/parameters/playerId'
      responses:
        '200':
          $ref: '#/components/responses/PlayerDetailResponse'
    put:
      summary: Update player parameters
      parameters:
        - $ref: '#/components/parameters/playerId'
      requestBody:
        $ref: '#/components/requestBodies/PlayerBody'
      responses:
        '200':
          $ref: '#/components/responses/PlayerDetailResponse'
    delete:
      summary: Remove player
      parameters:
        - $ref: '#/components/parameters/playerId'
      responses:
        '204':
          description: Player deleted
  /player/{player_id}/character:
    get:
      summary: Retrieve a list of player characters
      parameters:
        - $ref: '#/components/parameters/playerId'
      responses:
        '200':
          $ref: '#/components/responses/CharacterListResponse'
  /player/{player_id}/character/{character_id}:
    get:
      summary: Retrieve player character details
      parameters:
        - $ref: '#/components/parameters/playerId'
        - $ref: '#/components/parameters/characterId'
      responses:
        '200':
          $ref: '#/components/responses/CharacterDetailResponse'
    delete:
      summary: Remove player character
      parameters:
        - $ref: '#/components/parameters/playerId'
        - $ref: '#/components/parameters/characterId'
      responses:
        '204':
          description: Player deleted
components:
  schemas:
    TurnResponseStatus:
      type: string
      enum:
        - OK
        - ERROR
    TurnDetail:
      type: object
      properties:
        status: 
          $ref: '#/components/schemas/TurnResponseStatus'
        text:
          type: string
    TurnSubmit:
      type: object
      properties:
        command:
          type: string
    Game:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    GameDetail:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
    GameSubmit:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
    ArrayOfGames:
      type: array
      items:
        $ref: '#/components/schemas/Game'
    Room:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    RoomDetail:
      type: object
      properties:
        id:
          type: string
        game_id:
          type: string
        title:
          type: string
        description:
          type: string
        is_start:
          type: boolean
        exits:
          $ref: '#/components/schemas/ArrayOfExits'
    Exit:
      type: object
      properties:
        id:
          type: string
        to_room_id:
          type: string
        direction:
          type: string
    ExitSubmit:
      type: object
      properties:
        to_room_id:
          type: string
        direction:
          type: string
    RoomSubmit:
      type: object
      properties:
        game_id:
          type: string
        title:
          type: string
        description:
          type: string
        is_start:
          type: boolean
        exits:
          type: array
          items:
            $ref: '#/components/schemas/ExitSubmit'
    ArrayOfRooms:
      type: array
      items:
        $ref: '#/components/schemas/Room'
    ArrayOfExits:
      type: array
      items:
        $ref: '#/components/schemas/Exit'

    Item:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    ItemDetail:
      type: object
      properties:
        id:
          type: string
        game_id:
          type: string
        title:
          type: string
        description:
          type: string
        aliases:
          type: array
          items:
            type: string
        attack:
          type: integer
        defense:
          type: integer
        location:
          type: string
          nullable: true
    ItemSubmit:
      type: object
      properties:
        game_id:
          type: string
        title:
          type: string
        description:
          type: string
        aliases:
          type: array
          items:
            type: string
        attack:
          type: integer
        defense:
          type: integer
        location:
          type: string
          nullable: true
    ArrayOfItems:
      type: array
      items:
        $ref: '#/components/schemas/Item'        

    Player:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    PlayerSubmit:
      type: object
      properties:
        title:
          type: string
    PlayerDetail:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    ArrayOfPlayers:
      type: array
      items:
        $ref: '#/components/schemas/Player'

    Character:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    CharacterSubmit:
      type: object
      properties:
        title:
          type: string
    CharacterDetail:
      type: object
      properties:
        id:
          type: string
        game_id:
          type: string
        player_id:
          type: string
        title:
          type: string
        location:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string          
    ArrayOfCharacters:
      type: array
      items:
        $ref: '#/components/schemas/Character'
    EventItem:
      type: object
      properties:
        id:
          type: string
        primitive:
          type: string
        arguments:
          type: array
          items:
            type: string
    EventItemList:
      type: array
      items:
        $ref: '#/components/schemas/EventItem'
    Event:
      type: object
      properties:
        id:
          type: string
        command:
          type: string
        conditions:
          $ref: '#/components/schemas/EventItemList'
        true_part:
          $ref: '#/components/schemas/EventItemList'
        false_part:
          $ref: '#/components/schemas/EventItemList'
    ArrayOfEvents:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    EventItemSubmit:
      type: object
      properties:
        primitive:
          type: string
        arguments:
          type: array
          items:
            type: string
    EventItemSubmitList:
      type: array
      items:
        $ref: '#/components/schemas/EventItemSubmit'
    EventSubmit:
      type: object
      properties:
        command:
          type: string
        conditions:
          $ref: '#/components/schemas/EventItemSubmitList'
        true_part:
          $ref: '#/components/schemas/EventItemSubmitList'
        false_part:
          $ref: '#/components/schemas/EventItemSubmitList'
  parameters:
    gameId:
      name: game_id
      in: path
      required: true
      description: The id of the game to edit
      schema:
        type: string
    roomId:
      name: room_id
      in: path
      required: true
      description: UUID of a room
      schema:
        type: string
    exitId:
      name: exit_id
      in: path
      required: true
      description: UUID of an exit
      schema:
        type: string
    itemId:
      name: item_id
      in: path
      required: true
      description: Item ID
      schema:
        type: string
    playerId:
      name: player_id
      in: path
      required: true
      description: Player ID
      schema:
        type: string
    characterId:
      name: character_id
      in: path
      required: true
      description: Player Character ID
      schema:
        type: string
    eventId:
      name: event_id
      in: path
      required: true
      description: Event ID
      schema:
        type: string
  requestBodies:
    TurnBody:
      description: Turn submission
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TurnSubmit'
    GameBody:
      description: Settable Game properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameSubmit'
    RoomBody:
      description: Settable Room properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomSubmit'
    ExitBody:
      description: Settable Exit properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExitSubmit'
    ItemBody:
      description: Settable Item properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ItemSubmit'
    PlayerBody:
      description: Settable Player properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlayerSubmit'
    CharacterBody:
      description: Settable Player Character properties
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CharacterSubmit'
    EventBody:
      description: Turn submission
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventSubmit'
  responses:
    TurnDetailResponse:
      description: Turn submission response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TurnDetail'
    GameListResponse:            
      description: List of games
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfGames'            
    GameDetailResponse:
      description: Game detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameDetail'
    RoomListResponse:
      description: List of rooms
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfRooms'
    RoomDetailResponse:
      description: Room detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomDetail'
    RoomExitListResponse:
      description: List of exits
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfExits'    
    RoomExitDetailResponse:
      description: Exit detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exit'
    ItemListResponse:
      description: List of items
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfItems'    
    ItemDetailResponse:
      description: Item detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ItemDetail'            
    PlayerListResponse:
      description: List of players
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfPlayers'
    PlayerDetailResponse:
      description: Player detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlayerDetail'
    CharacterListResponse:
      description: List of player characters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfCharacters'
    CharacterDetailResponse:
      description: Character detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CharacterDetail'
    EventListResponse:
      description: List of events
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfEvents'
    EventDetailResponse:
      description: Event detail
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Event'